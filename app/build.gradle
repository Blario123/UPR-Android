apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

Properties importStrings = new Properties()
importStrings.load(new FileInputStream(file(
        "../upr/src/com/dabomstew/pkrandom/newgui/Bundle.properties")))
def trimPrefix = ~/^GUI_/
def trimSuffix = ~/_?text$/
def prefixMapType = "java.util.HashMap<String, java.util.Map<String, String>>"
Properties groupStrings = importStrings.groupBy {
    ((it.key.replaceAll("\\.", "_") - trimPrefix) - trimSuffix).split("[A-Z]", 2)[0]
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "ly.mens.rndpkmn"
        minSdkVersion 29
        targetSdkVersion 30
        versionCode 6
        versionName "0.0.6"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        importStrings.forEach { rawKey, value ->
            String key = (rawKey.replaceAll("\\.", "_") - trimPrefix) - trimSuffix
            resValue "string", key, "\"$value\""
        }
        buildConfigField prefixMapType, "PREFIX_MAP", mapToString(groupStrings, prefixMapType)
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets.main.java.srcDirs = ['src/main/kotlin']
    namespace 'ly.mens.rndpkmn'
    buildFeatures {
        compose true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    composeOptions {
        kotlinCompilerVersion kotlin_version
        kotlinCompilerExtensionVersion "1.1.1"
    }
    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.compose.ui:ui:1.1.1'
    implementation 'androidx.compose.ui:ui-tooling:1.1.1'
    implementation 'androidx.compose.foundation:foundation:1.1.1'
    implementation 'androidx.compose.material:material:1.1.1'
    implementation 'androidx.compose.material:material-icons-core:1.1.1'
    implementation 'androidx.compose.material:material-icons-extended:1.1.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1'
    implementation 'androidx.compose.runtime:runtime-livedata:1.1.1'
    implementation 'androidx.navigation:navigation-compose:2.4.2'
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.1.1'
    testImplementation 'junit:junit:4.12'
    implementation project(':upr')
}
repositories {
    mavenCentral()
}

String mapToString(Map map, String type) {
    def prefix = "new $type(){{ "
    def suffix = '}}'
    def value = new StringBuilder()
    for (e in map) {
        if (e.value instanceof Map) {
            value.append(String.format('put("%s",%s); ', e.key, mapToString(e.value, "java.util.HashMap<String, String>")))
        } else {
            value.append(String.format('put("%s","%s"); ', e.key, e.value.replaceAll("\n", " ").replaceAll("\"", "'")))
        }
    }
    return String.format('%s%s%s', prefix, value, suffix)
}
